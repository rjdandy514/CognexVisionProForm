<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cognex.Vision.Startup.Net</name>
    </assembly>
    <members>
        <member name="T:Cognex.Vision.StartupWaitType">
            <summary> Enumeration of flags used for specifying the mode of waiting.</summary>
        </member>
        <member name="F:Cognex.Vision.StartupWaitType.Unspecified">
            <summary> Unused mode </summary>
        </member>
        <member name="F:Cognex.Vision.StartupWaitType.Forever">
            <summary> Wait infinitely for the initialization to finish </summary>
        </member>
        <member name="F:Cognex.Vision.StartupWaitType.Timeout">
            <summary> Wait for the initialization to finish with a timeout </summary>
        </member>
        <member name="F:Cognex.Vision.StartupWaitType.Nowait">
            <summary> Wait for the initialization to finish once and immediately return </summary>
        </member>
        <member name="T:Cognex.Vision.Startup">
            <summary> This class is used to initialize and shutdown the product. </summary>
        </member>
        <member name="T:Cognex.Vision.Startup.ProductKey">
            <summary>  Enumeration of product types. Do not change the values. </summary>
        </member>
        <member name="T:Cognex.Vision.Startup.VisionInitResultType">
            <summary> Enumeration of flags used for specifying the result of the initialization </summary>
        </member>
        <member name="F:Cognex.Vision.Startup.VisionInitResultType.NotFinished">
            <summary> Initialization not finished </summary>
        </member>
        <member name="F:Cognex.Vision.Startup.VisionInitResultType.WaitModeFailed">
            <summary> Failed to initialize internal wait mode </summary>
        </member>
        <member name="F:Cognex.Vision.Startup.VisionInitResultType.SecurityInitializationFailed">
            <summary> Failed to wait for security initialization to finish </summary>
        </member>
        <member name="F:Cognex.Vision.Startup.VisionInitResultType.Success">
            <summary> Success </summary>
        </member>
        <member name="M:Cognex.Vision.Startup.ProductNameToKey(System.String)">
            <summary>  Return the product key associated with the product name. </summary>
            <param name="name">is a string which matches a product name.</param>
            <returns>The ProductKey for the name.</returns>
            <exception cref="T:Cognex.Vision.ArgumentException">
            Thrown if the code is not recognized.
            </exception>
        </member>
        <member name="M:Cognex.Vision.Startup.Initialize(Cognex.Vision.Startup.ProductKey,System.String[],System.Boolean)">
            <summary> This function calls Vision.Init(), Registration.RegisterAll() and also
            explicitly loads the Cognex.Vision.*.dlls. Forcing all the dlls to load
            causes the contained types to be registered with cereal serialization.</summary> 
            <param name="productKey">An enum describing the underlying license product type the function will initialize. </param>
            <param name="libraryNames">A vector that contains the dlls to be loaded.</param>
            <param name="initializeSecurity">A boolean parameter that determines whether to initialize security. </param>
            <remarks>A Vision application must call this function
            before any Vision classes can be used.</remarks>
        </member>
        <member name="M:Cognex.Vision.Startup.LoadLibraries(System.String[])">
            <summary> This function loads the dlls specified.</summary> 
            <param name="libraryNames">A vector that contains the dlls to be loaded. </param>
        </member>
        <member name="M:Cognex.Vision.Startup.Shutdown">
            <summary> Used to shutdown Vision.</summary>
            <remarks>   A Vision application must call this function
            before terminating. You should not call Initialize after calling this method. </remarks>
        </member>
        <member name="M:Cognex.Vision.Startup.WaitForInitDone(Cognex.Vision.StartupWaitType,System.UInt32)">
            <summary> A blocking function that returns once Vision has finished initializing.
            Initialization is started by calling Initialize. </summary>
            <param name="type">Specifies the method used for waiting. </param>
            <param name="timeout">A timeout that applies when the type is specified as Timeout. When the timeout expires, this function will return. </param>
            <returns>  True if Vision finished initializing, otherwise false. </returns>
            <exception cref="T:Cognex.Vision.SecurityViolationException">
            Thrown if the internal wait mode failed to initialize or this function failed to wait for security
            initialization to finish.
            </exception>
        </member>
    </members>
</doc>
